"""Add unique constraint in vote

Revision ID: 54770c2d8772
Revises: 4c9cd9554f1c
Create Date: 2024-11-08 18:44:55.090765

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '54770c2d8772'
down_revision: Union[str, None] = '4c9cd9554f1c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('poll', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.alter_column('poll', 'start_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.alter_column('poll', 'end_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.add_column('vote', sa.Column('poll_id', sa.Uuid(), nullable=True))
    op.alter_column('vote', 'timestamp',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.create_index(op.f('ix_vote_poll_id'), 'vote', ['poll_id'], unique=False)
    op.create_unique_constraint('unique_voter_poll', 'vote', ['voter_email_hash', 'poll_id'])
    op.create_foreign_key(None, 'vote', 'poll', ['poll_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('unique_voter_poll', 'vote', type_='unique')
    op.drop_index(op.f('ix_vote_poll_id'), table_name='vote')
    op.alter_column('vote', 'timestamp',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_column('vote', 'poll_id')
    op.alter_column('poll', 'end_time',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('poll', 'start_time',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('poll', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    # ### end Alembic commands ###
